Individual Files:
========================================
Folder: ./EPSA/assessment_app
========== Python django File: ./EPSA/assessment_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/assessment_app/__init__.py


========== Python django File: ./EPSA/assessment_app/apps.py
from django.apps import AppConfig


class AssessmentAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "assessment_app"


========== Python django File: ./EPSA/assessment_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/assessment_app/models.py
from django.db import models
from django.contrib.auth.models import User

class Assessment(models.Model):
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    status = models.CharField(max_length=50, choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved')])
    due_date = models.DateField(null=True, blank=True)

    def __str__(self):
        return self.name

class UserAssessment(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    assessment = models.ForeignKey(Assessment, on_delete=models.CASCADE)
    role = models.CharField(max_length=50, choices=[('owner', 'Owner'), ('collaborator', 'Collaborator')])

class AssessmentQuestion(models.Model):
    assessment = models.ForeignKey(Assessment, on_delete=models.CASCADE)
    question_text = models.TextField()
    question_type = models.CharField(max_length=50, choices=[('multiple_choice', 'Multiple Choice'), ('text', 'Text'), ('checkbox', 'Checkbox')])
    order = models.IntegerField()
    required = models.BooleanField(default=True)

class AssessmentResponse(models.Model):
    user_assessment = models.ForeignKey(UserAssessment, on_delete=models.CASCADE)
    assessment_question = models.ForeignKey(AssessmentQuestion, on_delete=models.CASCADE)
    response_text = models.TextField(blank=True)
    # Add response_option if needed for multiple-choice questions

class UserAssessmentPermission(models.Model):
    user_assessment = models.ForeignKey(UserAssessment, on_delete=models.CASCADE)
    permission_type = models.CharField(max_length=50, choices=[('view', 'View'), ('edit', 'Edit'), ('submit', 'Submit')])

========== Python django File: ./EPSA/assessment_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
Folder: ./EPSA/polling_site_app
========== Python django File: ./EPSA/polling_site_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/polling_site_app/__init__.py


========== Python django File: ./EPSA/polling_site_app/apps.py
from django.apps import AppConfig


class PollingSiteAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "polling_site_app"


========== Python django File: ./EPSA/polling_site_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/polling_site_app/models.py
from django.db import models

class State(models.Model):
    name = models.CharField(max_length=255)
    code = models.CharField(max_length=2)  # e.g., "CA", "NY"

    def __str__(self):
        return self.name

class County(models.Model):
    name = models.CharField(max_length=255)
    state = models.ForeignKey(State, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

class CityOrTown(models.Model):
    name = models.CharField(max_length=255)
    county = models.ForeignKey(County, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

class PollingSite(models.Model):
    name = models.CharField(max_length=255)
    address = models.CharField(max_length=255)
    city_or_town = models.ForeignKey(CityOrTown, on_delete=models.CASCADE)
    state = models.ForeignKey(State, on_delete=models.CASCADE) 
    zip_code = models.CharField(max_length=10)
    latitude = models.FloatField(null=True, blank=True)
    longitude = models.FloatField(null=True, blank=True)

    def __str__(self):
        return self.name


========== Python django File: ./EPSA/polling_site_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
Folder: ./EPSA/user_feedback_app
========== Python django File: ./EPSA/user_feedback_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/user_feedback_app/__init__.py


========== Python django File: ./EPSA/user_feedback_app/apps.py
from django.apps import AppConfig


class UserFeedbackAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "user_feedback_app"


========== Python django File: ./EPSA/user_feedback_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/user_feedback_app/models.py
from django.db import models
from django.contrib.auth.models import User

class UserFeedback(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    content = models.TextField()
    category = models.CharField(max_length=50, choices=[('usability', 'Usability'), ('functionality', 'Functionality'), ('bug_report', 'Bug Report')])
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Feedback from {self.user.username}"


========== Python django File: ./EPSA/user_feedback_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
Folder: ./EPSA/user_management_app
========== Python django File: ./EPSA/user_management_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/user_management_app/__init__.py


========== Python django File: ./EPSA/user_management_app/apps.py
from django.apps import AppConfig


class UserManagementAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "user_management_app"


========== Python django File: ./EPSA/user_management_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/user_management_app/models.py
from django.db import models
from django.contrib.auth.models import User

class UserRole(models.Model):
    name = models.CharField(max_length=50)  # e.g., admin, analyst, collaborator

    def __str__(self):
        return self.name

class Comment(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    assessment = models.ForeignKey(Assessment, on_delete=models.CASCADE)
    parent_comment = models.ForeignKey('self', on_delete=models.CASCADE, null=True, blank=True)  # For nested comments
    content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class NotificationPreference(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    notification_type = models.CharField(max_length=50, choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')]) 
    frequency = models.CharField(max_length=50, choices=[('immediate', 'Immediate'), ('daily', 'Daily'), ('weekly', 'Weekly')])

========== Python django File: ./EPSA/user_management_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
Folder: ./EPSA/admin_compliance_app
========== Python django File: ./EPSA/admin_compliance_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/admin_compliance_app/__init__.py


========== Python django File: ./EPSA/admin_compliance_app/apps.py
from django.apps import AppConfig


class AdminComplianceAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "admin_compliance_app"


========== Python django File: ./EPSA/admin_compliance_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/admin_compliance_app/models.py
from django.db import models
from assessment_app.models import Assessment

class ComplianceReport(models.Model):
    assessment = models.ForeignKey(Assessment, on_delete=models.CASCADE)
    report_data = models.TextField()  # Consider using JSONField for structured data
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Compliance Report for Assessment {self.assessment.id}"

========== Python django File: ./EPSA/admin_compliance_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
Folder: ./EPSA/adv_user_management_app
========== Python django File: ./EPSA/adv_user_management_app/views.py
from django.shortcuts import render

# Create your views here.


========== Python django File: ./EPSA/adv_user_management_app/__init__.py


========== Python django File: ./EPSA/adv_user_management_app/apps.py
from django.apps import AppConfig


class AdvUserManagementAppConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "adv_user_management_app"


========== Python django File: ./EPSA/adv_user_management_app/tests.py
from django.test import TestCase

# Create your tests here.


========== Python django File: ./EPSA/adv_user_management_app/models.py
from django.db import models
from django.contrib.auth.models import User

class UserActivityLog(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    action = models.CharField(max_length=255)
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.user.username} - {self.action} at {self.timestamp}"

========== Python django File: ./EPSA/adv_user_management_app/admin.py
from django.contrib import admin

# Register your models here.


========================================
